server:
  port: 8090
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234
# dependency에 설정이 되어 있기 때문에 생략 가능
#  mvc:
#    view:
#      prefix: /templates/
#      suffix: .mustache
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: {클라이언트 ID}
            client-secret: {클라이언트 보안 비밀번호}
            scope:
            - email
            - profile
          facebook:
            client-id: {앱 ID}
            client-secret: {앱 시크릿 코드}
            scope:
            - email
            - public_profile
          naver:
            client-id: {Client ID}
            client-secret: {Client Secret}
            scope:
            - name
            - email
            client-name: Naver
#            네이버의 OAuth2 세션 방식 : Authorization Code Grant Type, 코드를 부여받는 방식
            authorization-grant-type: authorization_code
#            구글과 페이스북은 기본 제공자이기 때문에 작성하지 않는다.
#            구글과 페이스북은 주소가 고정, 네이버는 수정 가능(하지만 규칙 맞춤)
            redirect-uri: http://localhost:8090/login/oauth2/code/naver
            
        provider:
          naver:
#            개발 가이드 참고 : https://developers.naver.com/docs/login/devguide/devguide.md 
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json으로 받는데 response라는 키 값으로 네이버가 리턴해준다.